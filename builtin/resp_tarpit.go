// Code generated by __generator__/interpreter.go at once

package builtin

import (
	"github.com/ysugimoto/falco/interpreter/context"
	"github.com/ysugimoto/falco/interpreter/function/errors"
	"github.com/ysugimoto/falco/interpreter/value"
)

const Resp_tarpit_Name = "resp.tarpit"

var Resp_tarpit_ArgumentTypes = []value.Type{value.IntegerType, value.IntegerType}

func Resp_tarpit_Validate(args []value.Value) error {
	if len(args) < 1 || len(args) > 2 {
		return errors.ArgumentNotInRange(Resp_tarpit_Name, 1, 2, args)
	}
	for i := range args {
		if args[i].Type() != Resp_tarpit_ArgumentTypes[i] {
			return errors.TypeMismatch(Resp_tarpit_Name, i+1, Resp_tarpit_ArgumentTypes[i], args[i].Type())
		}
	}
	return nil
}

// Fastly built-in function implementation of resp.tarpit
// Arguments may be:
// - INTEGER, INTEGER
// - INTEGER
// Reference: https://developer.fastly.com/reference/vcl/functions/miscellaneous/resp-tarpit/
func Resp_tarpit(ctx *context.Context, args ...value.Value) (value.Value, error) {
	// Argument validations
	if err := Resp_tarpit_Validate(args); err != nil {
		return value.Null, err
	}

	// @TODO: currently we do not support tarpitting, so this function has no effect
	// see: https://en.wikipedia.org/wiki/Tarpit_(networking)
	return value.Null, nil

}
