// Code generated by __generator__/interpreter.go at once

package builtin

import (
	"github.com/ysugimoto/falco/interpreter/context"
	"github.com/ysugimoto/falco/interpreter/function/errors"
	"github.com/ysugimoto/falco/interpreter/value"
)

const Ratelimit_penaltybox_add_Name = "ratelimit.penaltybox_add"

var Ratelimit_penaltybox_add_ArgumentTypes = []value.Type{value.IdentType, value.StringType, value.RTimeType}

func Ratelimit_penaltybox_add_Validate(args []value.Value) error {
	if len(args) != 3 {
		return errors.ArgumentNotEnough(Ratelimit_penaltybox_add_Name, 3, args)
	}
	for i := range args {
		if args[i].Type() != Ratelimit_penaltybox_add_ArgumentTypes[i] {
			return errors.TypeMismatch(Ratelimit_penaltybox_add_Name, i+1, Ratelimit_penaltybox_add_ArgumentTypes[i], args[i].Type())
		}
	}
	return nil
}

// Fastly built-in function implementation of ratelimit.penaltybox_add
// Arguments may be:
// - ID, STRING, RTIME
// Reference: https://developer.fastly.com/reference/vcl/functions/rate-limiting/ratelimit-penaltybox-add/
func Ratelimit_penaltybox_add(ctx *context.Context, args ...value.Value) (value.Value, error) {
	// Argument validations
	if err := Ratelimit_penaltybox_add_Validate(args); err != nil {
		return value.Null, err
	}

	// Need to be implemented
	return value.Null, errors.NotImplemented("ratelimit.penaltybox_add")
}
