// Code generated by __generator__/interpreter.go at once

package builtin

import (
	"testing"

	"github.com/ysugimoto/falco/interpreter/context"
	"github.com/ysugimoto/falco/interpreter/value"
)

// Fastly built-in function testing implementation of accept.language_filter_basic
// Arguments may be:
// - STRING, STRING, STRING, STRING
// Reference: https://developer.fastly.com/reference/vcl/functions/content-negotiation/accept-language-filter-basic/
func Test_Accept_language_filter_basic(t *testing.T) {
	ret, err := Accept_language_filter_basic(
		&context.Context{},
		&value.String{Value: "en:de:fr:nl"},
		&value.String{Value: "nl"},
		&value.String{Value: "de,nl,ja"},
		&value.Integer{Value: 2},
	)
	if err != nil {
		t.Errorf("Unexpected error: %s", err)
	}
	if ret.Type() != value.StringType {
		t.Errorf("Unexpected type returned, expect=%s, got=%s", value.StringType, ret.Type())
	}
	v := value.Unwrap[*value.String](ret)
	if v.Value != "de,nl" {
		t.Errorf("Unexpected value returned, expect=de,nl, got=%s", v.Value)
	}
}
