// Code generated by __generator__/interpreter.go at once

package builtin

import (
	"github.com/ysugimoto/falco/interpreter/context"
	"github.com/ysugimoto/falco/interpreter/function/errors"
	"github.com/ysugimoto/falco/interpreter/value"
)

const Ratelimit_check_rates_Name = "ratelimit.check_rates"

var Ratelimit_check_rates_ArgumentTypes = []value.Type{value.StringType, value.IdentType, value.IntegerType, value.IntegerType, value.IntegerType, value.IdentType, value.IntegerType, value.IntegerType, value.IntegerType, value.IdentType, value.RTimeType}

func Ratelimit_check_rates_Validate(args []value.Value) error {
	if len(args) != 11 {
		return errors.ArgumentNotEnough(Ratelimit_check_rates_Name, 11, args)
	}
	for i := range args {
		if args[i].Type() != Ratelimit_check_rates_ArgumentTypes[i] {
			return errors.TypeMismatch(Ratelimit_check_rates_Name, i+1, Ratelimit_check_rates_ArgumentTypes[i], args[i].Type())
		}
	}
	return nil
}

// Fastly built-in function implementation of ratelimit.check_rates
// Arguments may be:
// - STRING, ID, INTEGER, INTEGER, INTEGER, ID, INTEGER, INTEGER, INTEGER, ID, RTIME
// Reference: https://developer.fastly.com/reference/vcl/functions/rate-limiting/ratelimit-check-rates/
func Ratelimit_check_rates(ctx *context.Context, args ...value.Value) (value.Value, error) {
	// Argument validations
	if err := Ratelimit_check_rates_Validate(args); err != nil {
		return value.Null, err
	}

	// Need to be implemented
	return value.Null, errors.NotImplemented("ratelimit.check_rates")
}
